# coding: utf-8

"""
    Lob

    The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> 

    The version of the OpenAPI document: 1.19.28
    Contact: lob-openapi@lob.com
    Created by: https://support.lob.com/
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from lob_python_sdk import schemas  # noqa: F401


class AddressPlacement(
    schemas.EnumBase,
    schemas.StrSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    Specifies the location of the address information that will show through the double-window envelope. To see how this will impact your letter design, view our letter template.
Some values are exclusive to certain customers. Upgrade to the appropriate <a href="https://dashboard.lob.com/#/settings/editions" target="_blank">Print & Mail Edition</a> to gain access.
  * `top_first_page` - (default) print address information at the top of your provided first page
  * `insert_blank_page` - insert a blank address page at the beginning of your file (you will be charged for the extra page)
  * `bottom_first_page_center` - **(exclusive, deprecation planned within a few months)** print address information at the bottom center of your provided first page
  * `bottom_first_page` - **(exclusive)** print address information at the bottom of your provided first page

    """


    class MetaOapg:
        enum_value_to_name = {
            "top_first_page": "TOP_FIRST_PAGE",
            "insert_blank_page": "INSERT_BLANK_PAGE",
            "bottom_first_page_center": "BOTTOM_FIRST_PAGE_CENTER",
            "bottom_first_page": "BOTTOM_FIRST_PAGE",
        }
    
    @schemas.classproperty
    def TOP_FIRST_PAGE(cls):
        return cls("top_first_page")
    
    @schemas.classproperty
    def INSERT_BLANK_PAGE(cls):
        return cls("insert_blank_page")
    
    @schemas.classproperty
    def BOTTOM_FIRST_PAGE_CENTER(cls):
        return cls("bottom_first_page_center")
    
    @schemas.classproperty
    def BOTTOM_FIRST_PAGE(cls):
        return cls("bottom_first_page")
